# https://kubernetes-csi.github.io/docs/csi-driver-object.html
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: local.csi.driver
spec:
  attachRequired: false
# https://kubernetes-csi.github.io/docs/pod-info.html
  podInfoOnMount: false
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-csi
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-driver-account
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-role-binding
subjects:
  - kind: ServiceAccount
    name: csi-driver-account
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-csi-driver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: local-csi-driver
  template:
    metadata:
      labels:
        app: local-csi-driver
    spec:
      serviceAccount: csi-driver-account
      hostNetwork: true
      containers:
      - name: driver-registrar
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
        args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/local.csi.driver/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /csi
          - name: registration-dir
            mountPath: /registration
      - name: local-csi-driver
        image: local-csi-driver:local
        env:
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /csi
          - name: storage-dir
            mountPath: /mnt
            mountPropagation: "Bidirectional"
          - name: pods-dir
            mountPath: /var/lib/kubelet/pods
            mountPropagation: "Bidirectional"
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
          runAsUser: 0  # Runs as root
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/local.csi.driver
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: storage-dir
          hostPath:
            path: /mnt/storage/
            type: Directory
        - name: pods-dir
          hostPath:
            path: /var/lib/kubelet/pods/
            type: Directory
